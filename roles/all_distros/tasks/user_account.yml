---

#
#  Part of https://github.com/jaclu/ish-fstools
#
#  Copyright (c) 2025: Jacob.Lundqvist@gmail.com
#
#  License: MIT
#
#  Defines user account
#

- name: User acct - Find user with UID 501 different from ift_user_name
  ansible.builtin.command: >
    awk -F: -v user="{{ ift_user_name }}" '
    $3 == 501 && $1 != user { print $1 }' /etc/passwd
  register: all_distros_conflicting_user
  changed_when: false

- name: User acct - Fail if UID 501 is already used by another user
  ansible.builtin.fail:
    msg: >
      UID 501 is already assigned to user(s):
      {{ all_distros_conflicting_user.stdout_lines | join(", ") }}
  when: all_distros_conflicting_user.stdout != ""

- name: User acct - Find group with GID 501 different from ift_user_name
  ansible.builtin.command: >
    awk -F: -v group="{{ ift_user_name }}" '
    $3 == 501 && $1 != group { print $1 }' /etc/group
  register: all_distros_conflicting_group
  changed_when: false

- name: User acct - Fail if GID 501 is already used by another group
  ansible.builtin.fail:
    msg: >
      GID 501 is already assigned to group(s):
      {{ all_distros_conflicting_group.stdout_lines | join(", ") }}
  when: all_distros_conflicting_group.stdout != ""

- name: User acct - Ensure 'sudo' group exists (Alpine-compatible)
  ansible.builtin.group:
    name: sudo
    state: present

- name: "User acct - Ensure group with GID 501 exists: {{ ift_user_name }}"
  ansible.builtin.group:
    name: "{{ ift_user_name }}"
    gid: 501
    state: present
    force: true
  when: ift_user_name is defined

- name: User acct - Ensure UID:501 user exists with correct shell ({{ ift_user_name }}
  ansible.builtin.user:
    name: "{{ ift_user_name }}"
    uid: 501
    group: "{{ ift_user_name }}"
    groups: sudo
    # shell: "{{ ift_shell }}"
    state: present
    force: true  # forces update of existing user attributes, including shell
    password: ''  # ← explicitly sets empty password, avoids '!' in /etc/shadow
  when:
    - ift_user_name is defined
    - ift_shell is defined

- name: User acct - Check current shell for {{ ift_user_name }}
  ansible.builtin.command: getent passwd "{{ ift_user_name }}"
  register: all_distros_passwd_line
  changed_when: false

- name: User acct - Set shell for {{ ift_user_name }}
  ansible.builtin.command: chsh -s "{{ ift_shell }}" "{{ ift_user_name }}"
  when:
    - ift_user_name is defined
    - ift_shell is defined
    - all_distros_passwd_line.stdout.split(':')[6] != ift_shell
  changed_when: true

- name: User acct - Enable autologin for {{ ift_user_name }}
  ansible.builtin.shell: |
    set -o pipefail
    if "{{ f_app_ift_config }}" | grep autologin | grep -v " {{ ift_user_name }}$"; then
      mkdir -p "{{ d_etc_ift }}"
      "{{ f_app_ift_config }}" -a "{{ ift_user_name }}"
    else
      exit 43 # indicates autologin already set for this user
    fi
  args:
    executable: /bin/bash
  when: ift_user_name is defined
  register: all_distros_autologin_result
  changed_when: "all_distros_autologin_result.rc == 0"
  failed_when: >
    'ERROR' in all_distros_autologin_result.stdout or
    all_distros_autologin_result.rc not in [0, 43]
