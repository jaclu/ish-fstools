---

#
#  Part of https://github.com/jaclu/ish-fstools
#
#  Copyright (c) 2025: Jacob.Lundqvist@gmail.com
#
#  License: MIT
#
# Disable all default services, then soft-link all servicess found in
# /etc/init.d/ish-fstools to /etc/init.d
#
#  for f in /etc/init.d/*; do

- name: "Default services - Ensure folder exists {{ d_init_not }}"
  ansible.builtin.file:
    path: "{{ d_init_not }}"
    state: directory
    mode: '0755'

- name: "Default services - Count regular non-symlink files in {{ d_init_d }}"
  ansible.builtin.command: >
    sh -c "find '{{ d_init_d }}' -maxdepth 1 -type f -exec test ! -L {} \; -print | wc -l"
  register: all_distros_file_count_result
  changed_when: false

- name: "Default services - Move system services to {{ d_init_not }}"
  ansible.builtin.shell: |
    ex_code=0
    for f in "{{ d_init_d }}"/*; do
      case "$f" in
        "{{ d_init_not }}") continue ;;
      esac
      [ -f "$f" ] && [ ! -L "$f" ] && {
        mv "$f" "{{ d_init_not }}"/
        ex_code=43 # indicate that at least one service was moved
      }
    done
    return "$ex_code"
  args:
    executable: /bin/sh
  register: all_distros_services_moved
  changed_when: all_distros_services_moved.rc == 43
  failed_when:
    - all_distros_services_moved.stderr != ''
    - all_distros_services_moved.rc not in [0, 43]
  when: all_distros_file_count_result.stdout | int > 0

- name: "Default services - Check if folder exits {{ d_init_ift }}"
  ansible.builtin.stat:
    path: "{{ d_init_ift }}"
  register: all_distros_d_ift_services_stat

- name: "Default services - Sync ish-fstools links into {{ d_init_d }}"
  ansible.builtin.shell: |
    changed=0
    # Ensure all valid targets are linked
    for src in /etc/init.d/ish-fstools/*; do
      [ -f "$src" ] || continue
      dest="{{ d_init_d }}/$(basename "$src")"
      if [ ! -e "$dest" ]; then
        ln -s "$src" "$dest"
        echo "LINKED $dest"
        changed=43
      fi
    done

    # Remove broken links pointing into ish-fstools
    for link in "{{ d_init_d }}"/*; do
      [ -L "$link" ] || continue
      target=$(readlink "$link")
      case "$target" in
        "{{ d_init_ift }}"/*)
          [ -e "$target" ] && continue
          rm -f "$link"
          echo "REMOVED $link"
          changed=43
          ;;
      esac
    done

    exit $changed
  args:
    executable: /bin/sh
  register: all_distros_ish_link_output
  changed_when: all_distros_ish_link_output.rc == 43
  failed_when: all_distros_ish_link_output.rc not in [0, 43]
  when: all_distros_d_ift_services_stat.stat.exists
