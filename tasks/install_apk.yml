---

#
#  Part of https://github.com/jaclu/ish-fstools
#
#  Copyright (c) 2025: Jacob.Lundqvist@gmail.com
#
#  License: MIT
#
#  This task is idempotent, and will detect any install failure, no such package etc
#
#  This uses apk directly instead of using ansible.builtin.package or community.general.apk
#  both those are ridiculously slow since for each package to be installed,
#  they both first call: /sbin/apk -v info --description <package name>
#  And on iSH, which is really slow to start, running several extra apk calls,
#  really slow things down...
#
#  Comparison on my iPad, installing 40 packages:
#  - community.general.apk - 11m 11s  - repeated run: 8m 36s
#  - This direct apk usage - 3m10s    - repeated run: 44s
#

- name: " install_apk - Fail if install_apk.yml is not running on Alpine"
  ansible.builtin.fail:
    msg: "This role only supports Alpine Linux"
  when: ansible_os_family != 'Alpine'

- name: " install_apk - Fail if no packages are defined"
  ansible.builtin.fail:
    msg: "No packages defined to install. Please set apk_packages variable."
  when: apk_packages is not defined or (apk_packages | length) == 0

- name: " install_apk - List what will be installed"
  ansible.builtin.debug:
    msg:
      "{{ apk_packages }}"

- name: " install_apk - Install selected packages using apk directly (much faster)"
  ansible.builtin.command: >
    apk add --no-progress {{ apk_packages | join(' ') }}
  register: apk_result
  changed_when: "'Installing' in apk_result.stdout"
  failed_when: "'ERROR' in apk_result.stderr"
